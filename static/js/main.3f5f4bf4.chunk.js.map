{"version":3,"sources":["api/Goods.ts","store/actions.ts","store/selectors.ts","components/AddProductForm/AddProductForm.tsx","components/GoodsList/GoodsList.tsx","components/EditProductForm/EditProductForm.tsx","components/Product/Product.tsx","App.tsx","store/index.ts","index.tsx"],"names":["BASE_URL","getGoods","a","fetch","responce","json","getSortedGoods","sortedGoods","sort","b","count","name","localeCompare","getProduct","productId","postProduct","id","imageUrl","width","height","weight","method","headers","body","JSON","stringify","size","comments","response","editProduct","deleteProduct","LOAD_GOODS","LOAD_PRODUCT","loadGoodsAction","payload","type","loadProductAction","getGoodsSelector","state","goods","getProductSelector","product","AddProductForm","dispatch","useDispatch","useState","isFormVisible","setIsFormVisible","inputValues","setInputValues","handleInput","event","inputName","target","inputValue","value","loadGoods","goodsFromServer","clearInput","handleAddProduct","preventDefault","className","onClick","onSubmit","placeholder","onChange","required","GoodsList","isDeleteVisible","setIsDeleteVisible","setProductId","useSelector","handleDelete","loadProduct","productFromServer","useEffect","map","src","alt","to","selectedProductId","length","EditProductForm","handleEditProduct","Product","App","path","element","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f5f4bf4.chunk.js","sourcesContent":["export const BASE_URL = 'http://127.0.0.1:3003/goods';\n\nexport const getGoods = async (): Promise<Product[]> => {\n  const responce = await fetch(BASE_URL);\n\n  return responce.json();\n};\n\nexport const getSortedGoods = async () => {\n  const sortedGoods = await getGoods();\n\n  return sortedGoods\n    .sort((a, b) => +b.count - +a.count)\n    .sort((a, b) => a.name[0].localeCompare(b.name[0]));\n};\n\nexport const getProduct = async (productId: number) => {\n  const responce = await fetch(`${BASE_URL}/${productId}`);\n\n  return responce.json();\n};\n\nexport async function postProduct(\n  id: number,\n  imageUrl: string,\n  name: string,\n  count: string,\n  width: string,\n  height: string,\n  weight: string,\n) {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      id,\n      imageUrl,\n      name,\n      count,\n      size: {\n        width,\n        height,\n      },\n      weight,\n      comments: [],\n    }),\n  });\n\n  return response.json();\n}\n\nexport async function editProduct(\n  id: number,\n  imageUrl: string,\n  name: string,\n  count: string,\n  width: string,\n  height: string,\n  weight: string,\n) {\n  const response = await fetch(`${BASE_URL}/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      id,\n      imageUrl,\n      name,\n      count,\n      size: {\n        width,\n        height,\n      },\n      weight,\n      comments: [],\n    }),\n  });\n\n  return response.json();\n}\n\nexport async function deleteProduct(productId: number) {\n  return fetch(`${BASE_URL}/${productId}`, {\n    method: 'DELETE',\n  });\n}\n","export const LOAD_GOODS = 'LOAD GOODS';\nexport const LOAD_PRODUCT = 'LOAD GOOD';\n\nexport const loadGoodsAction = (payload: Product[]) => ({\n  type: LOAD_GOODS,\n  payload,\n});\n\nexport const loadProductAction = (payload: Product | null) => ({\n  type: LOAD_PRODUCT,\n  payload,\n});\n","export const getGoodsSelector = (state: State) => state.goods;\nexport const getProductSelector = (state: State) => state.product;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getSortedGoods, postProduct } from '../../api/Goods';\nimport { loadGoodsAction } from '../../store/actions';\n\ninterface Props {\n  productId: number,\n}\n\nexport const AddProductForm:React.FC<Props> = ({ productId }) => {\n  const dispatch = useDispatch();\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [inputValues, setInputValues] = useState({\n    imageUrl: '',\n    name: '',\n    count: '',\n    width: '',\n    height: '',\n    weight: '',\n  });\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n\n    setInputValues({\n      ...inputValues,\n      [inputName]: inputValue,\n    });\n  };\n\n  const loadGoods = async () => {\n    const goodsFromServer: Product[] = await getSortedGoods();\n\n    dispatch(loadGoodsAction(goodsFromServer));\n  };\n\n  const clearInput = () => {\n    setInputValues({\n      imageUrl: '',\n      name: '',\n      count: '',\n      width: '',\n      height: '',\n      weight: '',\n    });\n  };\n\n  const handleAddProduct = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    await postProduct(\n      productId,\n      inputValues.imageUrl,\n      inputValues.name,\n      inputValues.count,\n      inputValues.width,\n      inputValues.height,\n      inputValues.weight,\n    );\n    loadGoods();\n    setIsFormVisible(false);\n    clearInput();\n  };\n\n  const handleCancel = () => {\n    clearInput();\n    setIsFormVisible(false);\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => setIsFormVisible(true)}\n      >\n        Add product\n      </button>\n\n      {isFormVisible && (\n        <form onSubmit={handleAddProduct}>\n          <div className=\"modal is-active\">\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <p className=\"modal-card-title\">Add good</p>\n              </header>\n              <section className=\"modal-card-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Photo url\"\n                      name=\"imageUrl\"\n                      value={inputValues.imageUrl}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      name=\"name\"\n                      value={inputValues.name}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Count\"\n                      name=\"count\"\n                      value={inputValues.count}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Width\"\n                      name=\"width\"\n                      value={inputValues.width}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Height\"\n                      name=\"height\"\n                      value={inputValues.height}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Weight\"\n                      name=\"weight\"\n                      value={inputValues.weight}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button\n                  className=\"button is-success\"\n                  type=\"submit\"\n                >\n                  Confirm\n                </button>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </button>\n              </footer>\n            </div>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-case-declarations */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteProduct, getSortedGoods, getProduct } from '../../api/Goods';\nimport { loadGoodsAction, loadProductAction } from '../../store/actions';\nimport { getGoodsSelector } from '../../store/selectors';\nimport { AddProductForm } from '../AddProductForm/AddProductForm';\nimport './GoodsList.scss';\n\nexport const GoodsList:React.FC = () => {\n  const [isDeleteVisible, setIsDeleteVisible] = useState(false);\n  const [productId, setProductId] = useState(0);\n  const dispatch = useDispatch();\n  const goods = useSelector(getGoodsSelector);\n\n  const loadGoods = async () => {\n    const goodsFromServer: Product[] = await getSortedGoods();\n\n    dispatch(loadGoodsAction(goodsFromServer));\n  };\n\n  const handleDeleteConfirmation = (selectedProductId: number) => {\n    setIsDeleteVisible(true);\n    setProductId(selectedProductId);\n  };\n\n  const handleDelete = async () => {\n    await deleteProduct(productId);\n    setIsDeleteVisible(false);\n    loadGoods();\n  };\n\n  const handleSortBy = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case 'alphabet':\n        dispatch(loadGoodsAction([...goods].sort((a, b) => a.name[0].localeCompare(b.name[0]))));\n        break;\n\n      case 'count':\n        dispatch(loadGoodsAction([...goods].sort((a, b) => +b.count - +a.count)));\n        break;\n\n      default:\n        dispatch(loadGoodsAction(goods));\n    }\n  };\n\n  const loadProduct = async (id: number) => {\n    const productFromServer = await getProduct(id);\n\n    dispatch(loadProductAction(productFromServer));\n  };\n\n  useEffect(() => {\n    loadGoods();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"GoodsList\">\n        <h2 className=\"GoodsList__title\">Goods:</h2>\n        <div className=\"GoodsList__list-container\">\n          <div className=\"select GoodsList__select\">\n            <select id=\"sortBy\" onChange={handleSortBy}>\n              <option value=\"\">Sort by:</option>\n              <option value=\"alphabet\">Alphabet</option>\n              <option value=\"count\">Count</option>\n            </select>\n          </div>\n          <ul className=\"GoodsList__list\">\n            {goods.map(product => (\n              <li\n                key={product.id}\n                className=\"GoodsList__item\"\n              >\n                <img src={product.imageUrl} alt=\"placeholder\" />\n                <h3 className=\"GoodsList__product-title\">{product.name}</h3>\n                <span className=\"GoodsList__product-count\">\n                  Count:&nbsp;\n                  {product.count}\n                </span>\n                <div className=\"GoodsList__buttons buttons\">\n                  <Link\n                    to=\"product\"\n                    type=\"button\"\n                    className=\"GoodsList__user-button button\"\n                    onClick={() => loadProduct(product.id)}\n                  >\n                    More\n                  </Link>\n                  <button\n                    type=\"button\"\n                    className=\"GoodsList__user-button button\"\n                    onClick={() => handleDeleteConfirmation(product.id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      {isDeleteVisible && (\n        <div className=\"modal is-active\">\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">Delete product?</p>\n            </header>\n            <footer className=\"modal-card-foot\">\n              <button\n                className=\"button is-success\"\n                type=\"submit\"\n                onClick={handleDelete}\n              >\n                Confirm\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setIsDeleteVisible(false)}\n              >\n                Cancel\n              </button>\n            </footer>\n          </div>\n        </div>\n      )}\n\n      <AddProductForm productId={+goods[goods.length]} />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editProduct, getProduct } from '../../api/Goods';\nimport { loadProductAction } from '../../store/actions';\nimport { getProductSelector } from '../../store/selectors';\n\nexport const EditProductForm: React.FC = () => {\n  const dispatch = useDispatch();\n  const product = useSelector(getProductSelector);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [inputValues, setInputValues] = useState({\n    imageUrl: '',\n    name: '',\n    count: '',\n    width: '',\n    height: '',\n    weight: '',\n  });\n\n  const loadProduct = async () => {\n    if (product) {\n      const productFromServer = await getProduct(product.id);\n\n      dispatch(loadProductAction(productFromServer));\n    }\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n\n    setInputValues({\n      ...inputValues,\n      [inputName]: inputValue,\n    });\n  };\n\n  const handleEditProduct = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (product) {\n      await editProduct(\n        product.id,\n        inputValues.imageUrl,\n        inputValues.name,\n        inputValues.count,\n        inputValues.width,\n        inputValues.height,\n        inputValues.weight,\n      );\n      loadProduct();\n    }\n\n    setIsFormVisible(false);\n  };\n\n  useEffect(() => {\n    if (product) {\n      setInputValues({\n        imageUrl: product.imageUrl,\n        name: product.name,\n        count: product.count,\n        width: product.size.width,\n        height: product.size.height,\n        weight: product.weight,\n      });\n    }\n  }, [product]);\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"Product__button button\"\n        onClick={() => setIsFormVisible(true)}\n      >\n        Edit\n      </button>\n      {isFormVisible && (\n        <form onSubmit={handleEditProduct}>\n          <div className=\"modal is-active\">\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <p className=\"modal-card-title\">Edit product</p>\n              </header>\n              <section className=\"modal-card-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Photo url\"\n                      name=\"imageUrl\"\n                      value={inputValues.imageUrl}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      name=\"name\"\n                      value={inputValues.name}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Count\"\n                      name=\"count\"\n                      value={inputValues.count}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Width\"\n                      name=\"width\"\n                      value={inputValues.width}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Height\"\n                      name=\"height\"\n                      value={inputValues.height}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Weight\"\n                      name=\"weight\"\n                      value={inputValues.weight}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button\n                  className=\"button is-success\"\n                  type=\"submit\"\n                >\n                  Confirm\n                </button>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setIsFormVisible(false)}\n                >\n                  Cancel\n                </button>\n              </footer>\n            </div>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getProductSelector } from '../../store/selectors';\nimport { EditProductForm } from '../EditProductForm/EditProductForm';\nimport './Product.scss';\n\nexport const Product: React.FC = () => {\n  const product = useSelector(getProductSelector);\n\n  return (\n    <>\n      {product && (\n        <div className=\"Product\">\n          <img\n            className=\"Product__photo\"\n            src={product?.imageUrl}\n            alt=\"placeholder\"\n          />\n          <h3 className=\"Product__name\">{product.name}</h3>\n          <p className=\"Product__info\">\n            {`Count: ${product.count}\\n`}\n            {`Width: ${product.size.width}\\n`}\n            {`Height: ${product.size.height}\\n`}\n            {`Weight: ${product.weight}\\n`}\n          </p>\n          <div className=\"Product__buttons\">\n            <Link\n              to=\"/\"\n              type=\"button\"\n              className=\"Product__button button\"\n            >\n              Back\n            </Link>\n            <EditProductForm />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { Product } from './components/Product/Product';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          <Routes>\n            <Route path=\"/\" element={<GoodsList />} />\n            <Route path=\"product\" element={<Product />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { AnyAction, createStore } from 'redux';\nimport { LOAD_PRODUCT, LOAD_GOODS } from './actions';\n\nconst initialState: State = {\n  goods: [],\n  product: null,\n};\n\nconst reducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case LOAD_GOODS:\n      return {\n        ...state,\n        goods: action.payload,\n      };\n\n    case LOAD_PRODUCT:\n      return {\n        ...state,\n        product: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}