{"version":3,"sources":["api/Goods.ts","store/actions.ts","store/selectors.ts","components/AddGoodForm.tsx","components/GoodsList.tsx","App.tsx","store/index.ts","index.tsx"],"names":["BASE_URL","getGoods","a","fetch","responce","json","postGood","id","imageUrl","name","count","width","height","weight","method","headers","body","JSON","stringify","size","comments","response","deleteGood","goodId","LOAD_GOODS","LOAD_GOOD","getGoodsSelector","state","goods","AddGoodForm","useState","isFormVisible","setIsFormVisible","inputValues","setInputValues","handleInput","event","inputName","target","inputValue","value","handleAddGood","type","className","onClick","onSubmit","placeholder","onChange","required","GoodsList","isDeleteVisible","setIsDeleteVisible","setGoodId","dispatch","useDispatch","useSelector","loadGoods","goodsFromServer","payload","handleDelete","useEffect","map","good","selectedGoodId","length","App","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56da191d.chunk.js","sourcesContent":["const BASE_URL = 'http://127.0.0.1:3003/goods';\n\nexport const getGoods = async () => {\n  const responce = await fetch(BASE_URL);\n\n  return responce.json();\n};\n\nexport async function postGood(\n  id: number,\n  imageUrl: string,\n  name: string,\n  count: number,\n  width: number,\n  height: number,\n  weight: string,\n) {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      id,\n      imageUrl,\n      name,\n      count,\n      size: {\n        width,\n        height,\n      },\n      weight,\n      comments: [],\n    }),\n  });\n\n  return response.json();\n}\n\nexport async function deleteGood(goodId: number) {\n  return fetch(`${BASE_URL}/${goodId}`, {\n    method: 'DELETE',\n  });\n}\n","export const LOAD_GOODS = 'LOAD GOODS';\nexport const LOAD_GOOD = 'LOAD GOOD';\n\nexport const loadGoodsAction = (payload: Good[]) => ({\n  type: LOAD_GOODS,\n  payload,\n});\n\nexport const loadGoodAction = (payload: Good | null) => ({\n  type: LOAD_GOOD,\n  payload,\n});\n","export const getGoodsSelector = (state: State) => state.goods;\nexport const getGoodSelector = (state: State) => state.goods;\n","import React, { useState } from 'react';\nimport { postGood } from '../api/Goods';\n\ninterface Props {\n  goodId: number,\n}\n\nexport const AddGoodForm:React.FC<Props> = ({ goodId }) => {\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [inputValues, setInputValues] = useState({\n    imageUrl: '',\n    name: '',\n    count: '',\n    width: '',\n    height: '',\n    weight: '',\n  });\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n\n    setInputValues({\n      ...inputValues,\n      [inputName]: inputValue,\n    });\n  };\n\n  const handleAddGood = async () => {\n    await postGood(\n      goodId,\n      inputValues.imageUrl,\n      inputValues.name,\n      +inputValues.count,\n      +inputValues.width,\n      +inputValues.height,\n      inputValues.weight,\n    );\n  };\n\n  const handleCancel = () => {\n    setInputValues({\n      imageUrl: '',\n      name: '',\n      count: '',\n      width: '',\n      height: '',\n      weight: '',\n    });\n    setIsFormVisible(false);\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => setIsFormVisible(true)}\n      >\n        Add\n      </button>\n\n      {isFormVisible && (\n        <form onSubmit={handleAddGood}>\n          <div className=\"modal is-active\">\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <p className=\"modal-card-title\">Add good</p>\n              </header>\n              <section className=\"modal-card-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Photo url\"\n                      name=\"imageUrl\"\n                      value={inputValues.imageUrl}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      name=\"name\"\n                      value={inputValues.name}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Count\"\n                      name=\"count\"\n                      value={inputValues.count}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Width\"\n                      name=\"width\"\n                      value={inputValues.width}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Height\"\n                      name=\"height\"\n                      value={inputValues.height}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Weight\"\n                      name=\"weight\"\n                      value={inputValues.weight}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button\n                  className=\"button is-success\"\n                  type=\"submit\"\n                >\n                  Confirm\n                </button>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </button>\n              </footer>\n            </div>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteGood, getGoods } from '../api/Goods';\nimport { loadGoodsAction } from '../store/actions';\nimport { getGoodsSelector } from '../store/selectors';\nimport { AddGoodForm } from './AddGoodForm';\n\nexport const GoodsList:React.FC = () => {\n  const [isDeleteVisible, setIsDeleteVisible] = useState(false);\n  const [goodId, setGoodId] = useState(0);\n  const dispatch = useDispatch();\n  const goods = useSelector(getGoodsSelector);\n\n  const loadGoods = async () => {\n    const goodsFromServer: Good[] = await getGoods();\n\n    dispatch(loadGoodsAction(goodsFromServer));\n  };\n\n  const handleDeleteConfirmation = (selectedGoodId: number) => {\n    setIsDeleteVisible(true);\n    setGoodId(selectedGoodId);\n  };\n\n  const handleDelete = async () => {\n    await deleteGood(goodId);\n    setIsDeleteVisible(false);\n    loadGoods();\n  };\n\n  useEffect(() => {\n    loadGoods();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"title\">Goods</h1>\n      <ul>\n        {goods.map(good => (\n          <li key={good.id}>\n            <p>\n              {`${good.name}\\n`}\n            </p>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => handleDeleteConfirmation(good.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      {isDeleteVisible && (\n        <div className=\"modal is-active\">\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">Delete item?</p>\n            </header>\n            <footer className=\"modal-card-foot\">\n              <button\n                className=\"button is-success\"\n                type=\"submit\"\n                onClick={handleDelete}\n              >\n                Confirm\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setIsDeleteVisible(false)}\n              >\n                Cancel\n              </button>\n            </footer>\n          </div>\n        </div>\n      )}\n\n      <AddGoodForm goodId={+goods[goods.length]} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div>\n      <GoodsList />\n    </div>\n  );\n};\n","import { AnyAction, createStore } from 'redux';\nimport { LOAD_GOOD, LOAD_GOODS } from './actions';\n\nconst initialState: State = {\n  goods: [],\n  good: null,\n};\n\nconst reducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case LOAD_GOODS:\n      return {\n        ...state,\n        goods: action.payload,\n      };\n\n    case LOAD_GOOD:\n      return {\n        ...state,\n        good: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}