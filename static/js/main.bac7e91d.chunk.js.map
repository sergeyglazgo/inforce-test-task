{"version":3,"sources":["api/Goods.ts","store/actions.ts","store/selectors.ts","components/AddProductForm/AddProductForm.tsx","components/GoodsList/GoodsList.tsx","api/Comments.ts","components/EditProductForm/EditProductForm.tsx","components/Product/Product.tsx","App.tsx","store/index.ts","index.tsx"],"names":["BASE_URL","getGoods","a","fetch","responce","json","getSortedGoods","sortedGoods","sort","b","count","name","localeCompare","getProduct","productId","postProduct","product","method","headers","body","JSON","stringify","response","editProduct","id","deleteProduct","LOAD_GOODS","LOAD_PRODUCT","loadGoodsAction","payload","type","loadProductAction","getGoodsSelector","state","goods","getProductSelector","AddProductForm","dispatch","useDispatch","useState","isFormVisible","setIsFormVisible","imageUrl","width","height","weight","inputValues","setInputValues","handleInput","event","inputName","target","inputValue","value","loadGoods","goodsFromServer","clearInput","handleAddProduct","preventDefault","size","comments","className","onClick","onSubmit","placeholder","onChange","required","GoodsList","isDeleteVisible","setIsDeleteVisible","setProductId","useSelector","handleDelete","loadProduct","productFromServer","useEffect","map","src","alt","to","selectedProductId","getAllComments","getComments","filter","comment","deleteComment","commentId","postComment","ok","status","EditProductForm","handleEditProduct","editedProduct","Product","params","useParams","setComments","newComment","setNewComment","loadComments","commentsFromServer","handlePostComment","description","date","Date","e","App","path","element","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bac7e91d.chunk.js","sourcesContent":["export const BASE_URL = 'http://127.0.0.1:3003/goods';\n\nexport const getGoods = async (): Promise<Product[]> => {\n  const responce = await fetch(BASE_URL);\n\n  return responce.json();\n};\n\nexport const getSortedGoods = async () => {\n  const sortedGoods = await getGoods();\n\n  return sortedGoods\n    .sort((a, b) => +b.count - +a.count)\n    .sort((a, b) => a.name[0].localeCompare(b.name[0]));\n};\n\nexport const getProduct = async (productId: number) => {\n  const responce = await fetch(`${BASE_URL}/${productId}`);\n\n  return responce.json();\n};\n\nexport async function postProduct(product: Omit<Product, 'id'>) {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(product),\n  });\n\n  return response.json();\n}\n\nexport async function editProduct(product: Product) {\n  const response = await fetch(`${BASE_URL}/${product.id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(product),\n  });\n\n  return response.json();\n}\n\nexport async function deleteProduct(productId: number) {\n  return fetch(`${BASE_URL}/${productId}`, {\n    method: 'DELETE',\n  });\n}\n","export const LOAD_GOODS = 'LOAD GOODS';\nexport const LOAD_PRODUCT = 'LOAD GOOD';\n\nexport const loadGoodsAction = (payload: Product[]) => ({\n  type: LOAD_GOODS,\n  payload,\n});\n\nexport const loadProductAction = (payload: Product | null) => ({\n  type: LOAD_PRODUCT,\n  payload,\n});\n","export const getGoodsSelector = (state: State) => state.goods;\nexport const getProductSelector = (state: State) => state.product;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getSortedGoods, postProduct } from '../../api/Goods';\nimport { loadGoodsAction } from '../../store/actions';\n\nexport const AddProductForm:React.FC = () => {\n  const dispatch = useDispatch();\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [inputValues, setInputValues] = useState({\n    imageUrl: '',\n    name: '',\n    count: '',\n    width: '',\n    height: '',\n    weight: '',\n  });\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n\n    setInputValues({\n      ...inputValues,\n      [inputName]: inputValue,\n    });\n  };\n\n  const loadGoods = async () => {\n    const goodsFromServer: Product[] = await getSortedGoods();\n\n    dispatch(loadGoodsAction(goodsFromServer));\n  };\n\n  const clearInput = () => {\n    setInputValues({\n      imageUrl: '',\n      name: '',\n      count: '',\n      width: '',\n      height: '',\n      weight: '',\n    });\n  };\n\n  const handleAddProduct = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const product = {\n      imageUrl: inputValues.imageUrl,\n      name: inputValues.name,\n      count: inputValues.count,\n      size: {\n        width: inputValues.width,\n        height: inputValues.height,\n      },\n      weight: inputValues.weight,\n      comments: [],\n    };\n\n    await postProduct(product);\n    loadGoods();\n    setIsFormVisible(false);\n    clearInput();\n  };\n\n  const handleCancel = () => {\n    clearInput();\n    setIsFormVisible(false);\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"button is-success\"\n        onClick={() => setIsFormVisible(true)}\n      >\n        Add product\n      </button>\n\n      {isFormVisible && (\n        <form onSubmit={handleAddProduct}>\n          <div className=\"modal is-active\">\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <p className=\"modal-card-title\">Add good</p>\n              </header>\n              <section className=\"modal-card-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Photo url\"\n                      name=\"imageUrl\"\n                      value={inputValues.imageUrl}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      name=\"name\"\n                      value={inputValues.name}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Count\"\n                      name=\"count\"\n                      value={inputValues.count}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Width\"\n                      name=\"width\"\n                      value={inputValues.width}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Height\"\n                      name=\"height\"\n                      value={inputValues.height}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Weight\"\n                      name=\"weight\"\n                      value={inputValues.weight}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button\n                  className=\"button is-success\"\n                  type=\"submit\"\n                >\n                  Confirm\n                </button>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </button>\n              </footer>\n            </div>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-case-declarations */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteProduct, getSortedGoods, getProduct } from '../../api/Goods';\nimport { loadGoodsAction, loadProductAction } from '../../store/actions';\nimport { getGoodsSelector } from '../../store/selectors';\nimport { AddProductForm } from '../AddProductForm/AddProductForm';\nimport './GoodsList.scss';\n\nexport const GoodsList:React.FC = () => {\n  const [isDeleteVisible, setIsDeleteVisible] = useState(false);\n  const [productId, setProductId] = useState(0);\n  const dispatch = useDispatch();\n  const goods = useSelector(getGoodsSelector);\n\n  const loadGoods = async () => {\n    const goodsFromServer: Product[] = await getSortedGoods();\n\n    dispatch(loadGoodsAction(goodsFromServer));\n  };\n\n  const handleDeleteConfirmation = (selectedProductId: number) => {\n    setIsDeleteVisible(true);\n    setProductId(selectedProductId);\n  };\n\n  const handleDelete = async () => {\n    await deleteProduct(productId);\n    setIsDeleteVisible(false);\n    loadGoods();\n  };\n\n  const handleSortBy = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case 'alphabet':\n        dispatch(loadGoodsAction([...goods].sort((a, b) => a.name[0].localeCompare(b.name[0]))));\n        break;\n\n      case 'count':\n        dispatch(loadGoodsAction([...goods].sort((a, b) => +b.count - +a.count)));\n        break;\n\n      default:\n        dispatch(loadGoodsAction(goods));\n    }\n  };\n\n  const loadProduct = async (id: number) => {\n    const productFromServer = await getProduct(id);\n\n    dispatch(loadProductAction(productFromServer));\n  };\n\n  useEffect(() => {\n    loadGoods();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"GoodsList\">\n        <h2 className=\"GoodsList__title\">Goods:</h2>\n        <div className=\"GoodsList__list-container\">\n          <div className=\"select GoodsList__select\">\n            <select id=\"sortBy\" onChange={handleSortBy}>\n              <option value=\"\">Sort by:</option>\n              <option value=\"alphabet\">Alphabet</option>\n              <option value=\"count\">Count</option>\n            </select>\n          </div>\n          <ul className=\"GoodsList__list\">\n            {goods.map(product => (\n              <li\n                key={product.id}\n                className=\"GoodsList__item\"\n              >\n                <img src={product.imageUrl} alt=\"placeholder\" />\n                <h3 className=\"GoodsList__product-title\">{product.name}</h3>\n                <span className=\"GoodsList__product-count\">\n                  Count:&nbsp;\n                  {product.count}\n                </span>\n                <div className=\"GoodsList__buttons buttons\">\n                  <Link\n                    to={`${product.id}`}\n                    type=\"button\"\n                    className=\"GoodsList__user-button button\"\n                    onClick={() => loadProduct(product.id)}\n                  >\n                    More\n                  </Link>\n                  <button\n                    type=\"button\"\n                    className=\"GoodsList__user-button button\"\n                    onClick={() => handleDeleteConfirmation(product.id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      {isDeleteVisible && (\n        <div className=\"modal is-active\">\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">Delete product?</p>\n            </header>\n            <footer className=\"modal-card-foot\">\n              <button\n                className=\"button is-success\"\n                type=\"submit\"\n                onClick={handleDelete}\n              >\n                Confirm\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setIsDeleteVisible(false)}\n              >\n                Cancel\n              </button>\n            </footer>\n          </div>\n        </div>\n      )}\n\n      <AddProductForm />\n    </div>\n  );\n};\n","const BASE_URL = 'http://127.0.0.1:3003/comments';\n\nexport const getAllComments = async (): Promise<CommentItem[]> => {\n  const responce = await fetch(BASE_URL);\n\n  return responce.json();\n};\n\nexport const getComments = async (productId: number) => {\n  const responce = await getAllComments();\n\n  return responce.filter(comment => comment.productId === productId);\n};\n\nexport const deleteComment = async (commentId: number) => {\n  return fetch(`${BASE_URL}/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport async function postComment(comment: Omit<CommentItem, 'id'>) {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  });\n\n  return response.ok && response.status === 200;\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editProduct, getProduct } from '../../api/Goods';\nimport { loadProductAction } from '../../store/actions';\nimport { getProductSelector } from '../../store/selectors';\n\nexport const EditProductForm: React.FC = () => {\n  const dispatch = useDispatch();\n  const product = useSelector(getProductSelector);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [inputValues, setInputValues] = useState({\n    imageUrl: '',\n    name: '',\n    count: '',\n    width: '',\n    height: '',\n    weight: '',\n  });\n\n  const loadProduct = async () => {\n    if (product) {\n      const productFromServer = await getProduct(product.id);\n\n      dispatch(loadProductAction(productFromServer));\n    }\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n\n    setInputValues({\n      ...inputValues,\n      [inputName]: inputValue,\n    });\n  };\n\n  const handleEditProduct = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (product) {\n      const editedProduct = {\n        id: product?.id,\n        imageUrl: inputValues.imageUrl,\n        name: inputValues.name,\n        count: inputValues.count,\n        size: {\n          width: inputValues.width,\n          height: inputValues.height,\n        },\n        weight: inputValues.weight,\n        comments: [],\n      };\n\n      await editProduct(editedProduct);\n      loadProduct();\n    }\n\n    setIsFormVisible(false);\n  };\n\n  useEffect(() => {\n    if (product) {\n      setInputValues({\n        imageUrl: product.imageUrl,\n        name: product.name,\n        count: product.count,\n        width: product.size.width,\n        height: product.size.height,\n        weight: product.weight,\n      });\n    }\n  }, [product]);\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"Product__button button\"\n        onClick={() => setIsFormVisible(true)}\n      >\n        Edit\n      </button>\n      {isFormVisible && (\n        <form onSubmit={handleEditProduct}>\n          <div className=\"modal is-active\">\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <p className=\"modal-card-title\">Edit product</p>\n              </header>\n              <section className=\"modal-card-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Photo url\"\n                      name=\"imageUrl\"\n                      value={inputValues.imageUrl}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      name=\"name\"\n                      value={inputValues.name}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Count\"\n                      name=\"count\"\n                      value={inputValues.count}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Width\"\n                      name=\"width\"\n                      value={inputValues.width}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Height\"\n                      name=\"height\"\n                      value={inputValues.height}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Weight\"\n                      name=\"weight\"\n                      value={inputValues.weight}\n                      onChange={handleInput}\n                      required\n                    />\n                  </div>\n                </div>\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button\n                  className=\"button is-success\"\n                  type=\"submit\"\n                >\n                  Confirm\n                </button>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setIsFormVisible(false)}\n                >\n                  Cancel\n                </button>\n              </footer>\n            </div>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { deleteComment, getComments, postComment } from '../../api/Comments';\nimport { getProduct } from '../../api/Goods';\nimport { loadProductAction } from '../../store/actions';\nimport { getProductSelector } from '../../store/selectors';\nimport { EditProductForm } from '../EditProductForm/EditProductForm';\nimport './Product.scss';\n\nexport const Product: React.FC = () => {\n  const product = useSelector(getProductSelector);\n  const dispatch = useDispatch();\n  const params = useParams();\n  const [comments, setComments] = useState<CommentItem[]>([]);\n  const [newComment, setNewComment] = useState('');\n\n  const loadProduct = async () => {\n    if (params.id) {\n      const productFromServer = await getProduct(+params.id);\n\n      dispatch(loadProductAction(productFromServer));\n    }\n  };\n\n  const loadComments = async () => {\n    if (params.id) {\n      const commentsFromServer = await getComments(+params.id);\n\n      setComments(commentsFromServer);\n    }\n  };\n\n  const handleDelete = async (commentId: number) => {\n    deleteComment(commentId);\n    setComments(comments.filter(comment => comment.id !== commentId));\n  };\n\n  const handlePostComment = async () => {\n    if (params.id) {\n      const comment = {\n        productId: +params.id,\n        description: newComment,\n        date: Date(),\n      };\n\n      await postComment(comment);\n    }\n\n    loadComments();\n  };\n\n  useEffect(() => {\n    if (!product) {\n      loadProduct();\n    }\n\n    loadComments();\n  }, []);\n\n  return (\n    <>\n      {product && (\n        <div className=\"Product\">\n          <img\n            className=\"Product__photo\"\n            src={product.imageUrl}\n            alt=\"placeholder\"\n          />\n          <h3 className=\"Product__name\">{product.name}</h3>\n          <p className=\"Product__info\">\n            {`Count: ${product.count}\\n`}\n            {`Width: ${product.size.width}\\n`}\n            {`Height: ${product.size.height}\\n`}\n            {`Weight: ${product.weight}\\n`}\n          </p>\n          <div className=\"Product__comments\">\n            <h4 className=\"Product__comments-title\">Comments:</h4>\n            <ul>\n              {comments.map(comment => (\n                <li key={comment.id}>\n                  {comment.description}\n                  &nbsp;\n                  <button\n                    type=\"button\"\n                    className=\"Product__comment-delete button is-light\"\n                    onClick={() => handleDelete(comment.id)}\n                  >\n                    X\n                  </button>\n                </li>\n              ))}\n            </ul>\n            <textarea\n              className=\"textarea\"\n              placeholder=\"Your comment\"\n              value={newComment}\n              onChange={(e) => setNewComment(e.target.value)}\n            >\n            </textarea>\n          </div>\n          <div className=\"Product__buttons\">\n            <Link\n              to=\"/\"\n              type=\"button\"\n              className=\"Product__button button\"\n            >\n              Back\n            </Link>\n            <button\n              type=\"button\"\n              className=\"Product__button button is-success\"\n              onClick={handlePostComment}\n            >\n              Comment\n            </button>\n            <EditProductForm />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { Product } from './components/Product/Product';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          <Routes>\n            <Route path=\"/\" element={<GoodsList />} />\n            <Route path=\"/:id\" element={<Product />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { AnyAction, createStore } from 'redux';\nimport { LOAD_PRODUCT, LOAD_GOODS } from './actions';\n\nconst initialState: State = {\n  goods: [],\n  product: null,\n};\n\nconst reducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case LOAD_GOODS:\n      return {\n        ...state,\n        goods: action.payload,\n      };\n\n    case LOAD_PRODUCT:\n      return {\n        ...state,\n        product: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}